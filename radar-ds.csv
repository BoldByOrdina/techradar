name,ring,quadrant,isNew,description
Sketch,Assess,Tools,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Figma,Adopt,Tools,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Chromatic,Trial,Tools,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tailwind,Hold,Techniques,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
WebAssembly,Trial,Techniques,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Webcomponents,Assess,Techniques,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Stencil,Adopt,Techniques,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Storybook,Assess,languages-and-frameworks,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool1,Assess,languages-and-frameworks,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool2,Trial,languages-and-frameworks,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool3,Adopt,languages-and-frameworks,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool4,Assess,Platforms,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool5,Hold,Platforms,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool6,Adopt,Platforms,FALSE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool7,Assess,Platforms,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"
Tool8,Adopt,Tools,TRUE,"<p>The release of the <strong><a href=""https://webpack.js.org/concepts/module-federation/"">Webpack 5 Module Federation</a></strong> feature has been highly anticipated by developers of <a href=""/radar/techniques/micro-frontends"">micro frontend</a> architectures. The feature introduces a more standardized way to optimize how module dependencies and shared code are managed and loaded. Module federation allows for the specification of shared modules, which helps with the deduplication of dependencies across micro frontends by loading code used by multiple modules only once. It also lets you distinguish between local and remote modules, where the remote modules are not actually part of the build itself but loaded asynchronously. Compared to build-time dependencies like npm packages, this can significantly simplify the deployment of a module update with many downstream dependencies. Be aware, though, that this requires you to bundle all of your micro frontends with Webpack, as opposed to approaches such as <a href=""/radar/techniques/import-maps-for-micro-frontends"">import maps</a>, which might eventually become part of the W3C standard.</p>"